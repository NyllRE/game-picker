{"version":3,"file":"tab2.240ab16a.js","sources":["../../../../composables/usePhotoGallery.ts","../../../../pages/tabs/tab2.vue"],"sourcesContent":["/** @format */\n\nimport { Capacitor } from '@capacitor/core';\nimport {\n\tCamera,\n\tCameraSource,\n\tCameraResultType,\n\tPhoto,\n} from '@capacitor/camera';\nimport { Filesystem, Directory } from '@capacitor/filesystem';\nimport { Storage } from '@capacitor/storage';\n\nexport function usePhotoGallery() {\n\tconst photos = ref<UserPhoto[]>([]);\n\tconst PHOTO_STORAGE = 'photos';\n\n\tconst loadSaved = async () => {\n\t\tconst photoList = await Storage.get({ key: PHOTO_STORAGE });\n\t\tconst photosInStorage = photoList.value ? JSON.parse(photoList.value) : [];\n\n\t\t// If running on the web...\n\t\tif (!isPlatform('hybrid')) {\n\t\t\tfor (const photo of photosInStorage) {\n\t\t\t\tconst file = await Filesystem.readFile({\n\t\t\t\t\tpath: photo.filepath,\n\t\t\t\t\tdirectory: Directory.Data,\n\t\t\t\t});\n\t\t\t\t// Web platform only: Load the photo as base64 data\n\t\t\t\tphoto.webviewPath = `data:image/jpeg;base64,${file.data}`;\n\t\t\t}\n\t\t}\n\n\t\tphotos.value = photosInStorage;\n\t};\n\n\tconst convertBlobToBase64 = (blob: Blob) =>\n\t\tnew Promise((resolve, reject) => {\n\t\t\tconst reader = new FileReader();\n\t\t\treader.onerror = reject;\n\t\t\treader.onload = () => {\n\t\t\t\tresolve(reader.result);\n\t\t\t};\n\t\t\treader.readAsDataURL(blob);\n\t\t});\n\n\tconst savePicture = async (\n\t\tphoto: Photo,\n\t\tfileName: string\n\t): Promise<UserPhoto> => {\n\t\tlet base64Data: string;\n\t\t// \"hybrid\" will detect Cordova or Capacitor;\n\t\tif (isPlatform('hybrid')) {\n\t\t\tconst file = await Filesystem.readFile({\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\tpath: photo.path!,\n\t\t\t});\n\t\t\tbase64Data = file.data;\n\t\t} else {\n\t\t\t// Fetch the photo, read as a blob, then convert to base64 format\n\t\t\t// eslint-disable-next-line\n\t\t\tconst response = await fetch(photo.webPath!);\n\t\t\tconst blob = await response.blob();\n\t\t\tbase64Data = (await convertBlobToBase64(blob)) as string;\n\t\t}\n\t\tconst savedFile = await Filesystem.writeFile({\n\t\t\tpath: fileName,\n\t\t\tdata: base64Data,\n\t\t\tdirectory: Directory.Data,\n\t\t});\n\n\t\tif (isPlatform('hybrid')) {\n\t\t\t// Display the new image by rewriting the 'file://' path to HTTP\n\t\t\t// Details: https://ionicframework.com/docs/building/webview#file-protocol\n\t\t\treturn {\n\t\t\t\tfilepath: savedFile.uri,\n\t\t\t\twebviewPath: Capacitor.convertFileSrc(savedFile.uri),\n\t\t\t};\n\t\t} else {\n\t\t\t// Use webPath to display the new image instead of base64 since it's\n\t\t\t// already loaded into memory\n\t\t\treturn {\n\t\t\t\tfilepath: fileName,\n\t\t\t\twebviewPath: photo.webPath,\n\t\t\t};\n\t\t}\n\t};\n\n\tconst takePhoto = async () => {\n\t\tconst photo = await Camera.getPhoto({\n\t\t\tresultType: CameraResultType.Uri,\n\t\t\tsource: CameraSource.Camera,\n\t\t\tquality: 100,\n\t\t});\n\t\tconst fileName = new Date().getTime() + '.jpeg';\n\t\tconst savedFileImage = await savePicture(photo, fileName);\n\n\t\tphotos.value = [savedFileImage, ...photos.value];\n\t};\n\n\tconst deletePhoto = async (photo: UserPhoto) => {\n\t\t// Remove this photo from the Photos reference data array\n\t\tphotos.value = photos.value.filter((p) => p.filepath !== photo.filepath);\n\n\t\t// delete photo file from filesystem\n\t\tconst filename = photo.filepath.substr(photo.filepath.lastIndexOf('/') + 1);\n\t\tawait Filesystem.deleteFile({\n\t\t\tpath: filename,\n\t\t\tdirectory: Directory.Data,\n\t\t});\n\t};\n\n\tconst cachePhotos = () => {\n\t\tStorage.set({\n\t\t\tkey: PHOTO_STORAGE,\n\t\t\tvalue: JSON.stringify(photos.value),\n\t\t});\n\t};\n\n\tonMounted(loadSaved);\n\n\twatch(photos, cachePhotos);\n\n\treturn {\n\t\tphotos,\n\t\ttakePhoto,\n\t\tdeletePhoto,\n\t};\n}\n\nexport interface UserPhoto {\n\tfilepath: string;\n\twebviewPath?: string;\n}\n","<script setup lang=\"ts\">\nimport { actionSheetController } from '@ionic/vue'\nimport { UserPhoto } from '@/composables/usePhotoGallery'\nconst { photos, takePhoto, deletePhoto } = usePhotoGallery()\n\nconst showActionSheet = async (photo: UserPhoto) => {\n  const actionSheet = await actionSheetController.create({\n    header: 'Photos',\n    buttons: [\n      {\n        text: 'Delete',\n        role: 'destructive',\n        icon: ioniconsTrash,\n        handler: () => {\n          deletePhoto(photo)\n        },\n      },\n      {\n        text: 'Cancel',\n        icon: ioniconsClose,\n        role: 'cancel',\n        handler: () => {\n          // Nothing to do, action sheet is automatically closed\n        },\n      },\n    ],\n  })\n  await actionSheet.present()\n}\n</script>\n\n<template>\n  <ion-page>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>Photo Gallery</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content :fullscreen=\"true\">\n      <ion-header collapse=\"condense\">\n        <ion-toolbar>\n          <ion-title size=\"large\">Photo Gallery</ion-title>\n        </ion-toolbar>\n      </ion-header>\n      <ion-grid>\n        <ion-row>\n          <ion-col size=\"6\" :key=\"photo.filepath\" v-for=\"photo in photos\">\n            <ion-img :src=\"photo.webviewPath\" @click=\"showActionSheet(photo)\"></ion-img>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n\n      <ion-fab vertical=\"bottom\" horizontal=\"center\" slot=\"fixed\">\n        <ion-fab-button @click=\"takePhoto()\">\n          <ion-icon :icon=\"ioniconsCamera\"></ion-icon>\n        </ion-fab-button>\n      </ion-fab>\n    </ion-content>\n  </ion-page>\n</template>\n"],"names":["ioniconsTrash","ioniconsClose"],"mappings":"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"}