{"version":3,"file":"index.ed4e44ff.js","sources":["../../../../node_modules/@unhead/ssr/dist/index.mjs"],"sourcesContent":["const SelfClosingTags = [\"meta\", \"link\", \"base\"];\n\nconst propsToString = (props) => {\n  const handledAttributes = [];\n  for (const [key, value] of Object.entries(props)) {\n    if (value === false || value == null)\n      continue;\n    let attribute = key;\n    if (value !== true)\n      attribute += `=\"${String(value).replace(/\"/g, \"&quot;\")}\"`;\n    handledAttributes.push(attribute);\n  }\n  return handledAttributes.length > 0 ? ` ${handledAttributes.join(\" \")}` : \"\";\n};\n\nconst tagToString = (tag) => {\n  const attrs = propsToString(tag.props);\n  const openTag = `<${tag.tag}${attrs}>`;\n  return SelfClosingTags.includes(tag.tag) ? openTag : `${openTag}${tag.children || \"\"}</${tag.tag}>`;\n};\n\nfunction ssrRenderTags(tags) {\n  const schema = { htmlAttrs: {}, bodyAttrs: {}, tags: { head: [], bodyClose: [], bodyOpen: [] } };\n  for (const tag of tags) {\n    if (tag.tag === \"htmlAttrs\" || tag.tag === \"bodyAttrs\") {\n      schema[tag.tag] = { ...schema[tag.tag], ...tag.props };\n      continue;\n    }\n    schema.tags[tag.tagPosition || \"head\"].push(tagToString(tag));\n  }\n  return {\n    headTags: schema.tags.head.join(\"\\n\"),\n    bodyTags: schema.tags.bodyClose.join(\"\\n\"),\n    bodyTagsOpen: schema.tags.bodyOpen.join(\"\\n\"),\n    htmlAttrs: propsToString(schema.htmlAttrs),\n    bodyAttrs: propsToString(schema.bodyAttrs)\n  };\n}\n\nasync function renderSSRHead(head) {\n  const beforeRenderCtx = { shouldRender: true };\n  await head.hooks.callHook(\"ssr:beforeRender\", beforeRenderCtx);\n  if (!beforeRenderCtx.shouldRender) {\n    return {\n      headTags: \"\",\n      bodyTags: \"\",\n      bodyTagsOpen: \"\",\n      htmlAttrs: \"\",\n      bodyAttrs: \"\"\n    };\n  }\n  const ctx = { tags: await head.resolveTags() };\n  await head.hooks.callHook(\"ssr:render\", ctx);\n  const html = ssrRenderTags(ctx.tags);\n  const renderCtx = { tags: ctx.tags, html };\n  await head.hooks.callHook(\"ssr:rendered\", renderCtx);\n  return renderCtx.html;\n}\n\nexport { renderSSRHead };\n"],"names":["SelfClosingTags","propsToString","props","handledAttributes","key","value","attribute","tagToString","tag","attrs","openTag","ssrRenderTags","tags","schema","renderSSRHead","head","beforeRenderCtx","ctx","html","renderCtx"],"mappings":"AAAA,MAAMA,EAAkB,CAAC,OAAQ,OAAQ,MAAM,EAEzCC,EAAiBC,GAAU,CAC/B,MAAMC,EAAoB,CAAA,EAC1B,SAAW,CAACC,EAAKC,CAAK,IAAK,OAAO,QAAQH,CAAK,EAAG,CAChD,GAAIG,IAAU,IAASA,GAAS,KAC9B,SACF,IAAIC,EAAYF,EACZC,IAAU,KACZC,GAAa,KAAK,OAAOD,CAAK,EAAE,QAAQ,KAAM,QAAQ,MACxDF,EAAkB,KAAKG,CAAS,CACjC,CACD,OAAOH,EAAkB,OAAS,EAAI,IAAIA,EAAkB,KAAK,GAAG,IAAM,EAC5E,EAEMI,EAAeC,GAAQ,CAC3B,MAAMC,EAAQR,EAAcO,EAAI,KAAK,EAC/BE,EAAU,IAAIF,EAAI,MAAMC,KAC9B,OAAOT,EAAgB,SAASQ,EAAI,GAAG,EAAIE,EAAU,GAAGA,IAAUF,EAAI,UAAY,OAAOA,EAAI,MAC/F,EAEA,SAASG,EAAcC,EAAM,CAC3B,MAAMC,EAAS,CAAE,UAAW,CAAE,EAAE,UAAW,CAAE,EAAE,KAAM,CAAE,KAAM,CAAA,EAAI,UAAW,CAAA,EAAI,SAAU,CAAA,CAAI,CAAA,EAC9F,UAAWL,KAAOI,EAAM,CACtB,GAAIJ,EAAI,MAAQ,aAAeA,EAAI,MAAQ,YAAa,CACtDK,EAAOL,EAAI,KAAO,CAAE,GAAGK,EAAOL,EAAI,KAAM,GAAGA,EAAI,KAAK,EACpD,QACD,CACDK,EAAO,KAAKL,EAAI,aAAe,QAAQ,KAAKD,EAAYC,CAAG,CAAC,CAC7D,CACD,MAAO,CACL,SAAUK,EAAO,KAAK,KAAK,KAAK;AAAA,CAAI,EACpC,SAAUA,EAAO,KAAK,UAAU,KAAK;AAAA,CAAI,EACzC,aAAcA,EAAO,KAAK,SAAS,KAAK;AAAA,CAAI,EAC5C,UAAWZ,EAAcY,EAAO,SAAS,EACzC,UAAWZ,EAAcY,EAAO,SAAS,CAC7C,CACA,CAEA,eAAeC,EAAcC,EAAM,CACjC,MAAMC,EAAkB,CAAE,aAAc,IAExC,GADA,MAAMD,EAAK,MAAM,SAAS,mBAAoBC,CAAe,EACzD,CAACA,EAAgB,aACnB,MAAO,CACL,SAAU,GACV,SAAU,GACV,aAAc,GACd,UAAW,GACX,UAAW,EACjB,EAEE,MAAMC,EAAM,CAAE,KAAM,MAAMF,EAAK,YAAa,CAAA,EAC5C,MAAMA,EAAK,MAAM,SAAS,aAAcE,CAAG,EAC3C,MAAMC,EAAOP,EAAcM,EAAI,IAAI,EAC7BE,EAAY,CAAE,KAAMF,EAAI,KAAM,KAAAC,CAAI,EACxC,aAAMH,EAAK,MAAM,SAAS,eAAgBI,CAAS,EAC5CA,EAAU,IACnB"}